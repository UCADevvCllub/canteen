platform :ios, '13.0'

# Speed up pod installation
ENV['COCOAPODS_DISABLE_STATS'] = 'true'
ENV['COCOAPODS_SKIP_CACHE'] = 'false' # Keep cache for faster subsequent installs

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist."
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}."
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  # Only enable modular headers for pods that need it
  use_frameworks! :linkage => :static # Use static frameworks for faster build time
  
  # Other pods your app needs
  
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  pod 'FirebaseCore'
  pod 'FirebaseAuth'
  pod 'FirebaseStorage'

  pod 'FirebaseFirestore', :git => 'https://github.com/invertase/firestore-ios-sdk-frameworks.git', :tag => '11.8.0'

  
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      # Enable parallel builds
      config.build_settings['SWIFT_COMPILATION_MODE'] = 'wholemodule'
      config.build_settings['GCC_OPTIMIZATION_LEVEL'] = '0' # Fastest for debug
      config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-Onone' # Fastest for debug
    end
    flutter_additional_ios_build_settings(target)
  end
end